/* button */
.button {
  padding: 10px 20px;
  border-radius: 6px;
  text-transform: capitalize;
  cursor: pointer;
  display: flex;
  align-items: center;
  grid-gap: 5px;
  justify-content: center;
  position: relative;
  overflow: hidden;
  transition: 0.2s ease;
  background: var(--primary-500);
  border: 2px solid var(--primary-200);
}

.button:hover {
  border-color: var(--primary-300);

}

.button.cencle {
  background: var(--primary-100);
  border: 2px solid var(--primary-50);
}

.button.cencle:hover {
  background: var(--primary-500);
  border-color: var(--primary-200);
}

.button.sm {
  padding: 8px 15px;
}

.button:after {
  content: '';
  position: absolute;
  inset: 0;
  filter: brightness(0.9);
  transition: 0.2s ease;
  background-color: inherit;
  opacity: 0;
}

.button:not(.cencle):hover:after {
  opacity: 1;
}

.button span {
  font-size: clamp(14px, 2vw, 16px);
  font-weight: 500;
  z-index: 1;
  transition: 0.2s ease;
  position: relative;
  color: var(--white);
}

.button.cencle span {
  color: var(--primary-500);
}

.button.sm span {
  font-size: 14px;
}

.button:hover span {
  color: var(--white);

}

.button svg {
  height: 18px;
  width: 18px;
  stroke: var(--white);
  z-index: 1;
  stroke-width: 2.5px;
}

button[class^="button "] span {
  color: var(--white);
}

.button.primary {
  background-color: var(--primary-color);
}

.button.secondary {
  background-color: var(--secondary-color);
}

.button.success {
  background-color: var(--success-color);
}

.button.info {
  background-color: var(--info-color);
}

.button.warning {
  background-color: var(--warning-color);
}

.button.danger {
  background-color: var(--danger-color);
}

.button.dark {
  background-color: var(--dark-color);
}

.button.light {
  background-color: var(--light-color);
}

.button.light span {
  color: var(--black);
}

/* alert */
.alert {
  display: flex;
  padding: 20px;
  background: var(--white);
  border-radius: 8px;
  box-shadow: 0 0 10px #0001;
  max-width: 450px;
  width: 100%;
  align-items: center;
  position: fixed;
  bottom: 20px;
  transition: 0.3s ease;
  right: -450px;
  grid-gap: 20px;
}

.alert:has(:not(figure)) {
  max-width: 400px;
  right: -400px;
}

.alert.active {
  right: 15px;

}

.alert figure {
  border-radius: 50px;
  height: 40px;
  width: 40px;
  overflow: hidden;
  display: flex;
  align-items: center;
  justify-content: center;
}

.alert figure img {
  height: 100%;
  width: 100%;
  object-fit: cover;
}

.alert:before {
  content: '';
  position: absolute;
  left: 0;
  width: 5px;
  border-radius: 0 20px 20px 0;
  height: 60%;
  background: var(--light-color);
  top: 50%;
  transform: translateY(-50%);
}

.alert.primary:before {
  background: var(--primary-color);
}

.alert.secondary:before {
  background: var(--secondary-color);
}

.alert.success:before {
  background: var(--success-color);
}

.alert.info:before {
  background: var(--info-color);
}

.alert.warning:before {
  background: var(--warning-color);
}

.alert.danger:before {
  background: var(--danger-color);
}

.alert.dark:before {
  background: var(--dark-color);
}

.alert.light:before {
  background: var(--light-color);
}

.alert_content {
  display: flex;
  flex-direction: column;
  grid-gap: 5px;
}

.alert_content h4 {
  font-size: 15px;
  font-weight: 600;
  text-transform: capitalize;
}

.alert_content p {
  color: gray;
  font-size: 14px;
}

.alert_time {
  margin-left: auto;
  align-self: center;
  font-size: 13px;
  flex: 0 0 auto;
  color: var(--gray-400);
}

/* badge */
.badge {
  text-transform: capitalize;
  padding: 6px 15px 5px 15px;
  display: inline-block;
  line-height: 1;
  font-size: 13px;
  background: var(--danger-color);
  font-weight: 500;
  border-radius: 4px;
}

.badge.light-primary {
  background: var(--light-primary-color);
  color: var(--primary-color);
}

.badge.light-secondary {
  background: var(--light-secondary-color);
  color: var(--secondary-color);
}

.badge.light-success {
  background: var(--light-success-color);
  color: var(--success-color);
}

.badge.light-info {
  background: var(--light-info-color);
  color: var(--info-color);
}

.badge.light-warning {
  background: var(--light-warning-color);
  color: var(--warning-color);
}

.badge.light-danger {
  background: var(--light-danger-color);
  color: var(--danger-color);
}

.badge.light-dark {
  background: var(--dark-color);
  color: var(--white);
}

.badge.light {
  color: var(--black);
  background: var(--light-color);
}

/* indicator */
.indicator {
  display: none;
  display: flex;
  align-items: center;
  grid-gap: 5px;
  margin-left: 10px;
}

.indicator span {
  height: 10px;
  width: 10px;
  display: block;
  opacity: 0.5;
  background: var(--black);
  flex: 0 0 10px;
  border-radius: 10px;
}

.indicator.active span {
  display: flex;
  animation: indicator 1.5s ease-in-out infinite;
  animation-delay: var(--delay);
}

.indicator.primary span {
  background: var(--primary-color);
}

.indicator.secondary span {
  background: var(--secondary-color);
}

.indicator.success span {
  background: var(--success-color);
}

.indicator.info span {
  background: var(--info-color);
}

.indicator.warning span {
  background: var(--warning-color);
}

.indicator.danger span {
  background: var(--danger-color);
}

.indicator.dark span {
  background: var(--dark-color);
}

.indicator.light span {
  background: var(--light-color);
}

@keyframes indicator {
  0% {
    transform: translateY(0);
    opacity: 0.5;
  }

  25% {
    transform: translateY(-5px);
    opacity: 0.2;
  }

  50% {
    transform: translateY(0px);
    opacity: 0.5;
  }
}

/* pagination */
.pagination {
  display: inline-block;
  user-select: none;
}

.pagination ul {
  display: flex;
  border-radius: 5px;
  overflow: hidden;
  grid-gap: 5px;
  align-items: center;
}

.pagination ul li {
  height: 35px;
  width: 35px;
  flex: 0 0 35px;
  cursor: pointer;
  display: flex;
  align-items: center;
  transition: 0.2s ease;
  justify-content: center;
  border-radius: 5px;
  font-size: 15px;
}

.pagination ul li:where(.active, :hover) {
  background: var(--primary-500);
  color: var(--white);
}

.pagination ul li svg {
  height: 20px;
  width: 20px;
  stroke: var(--gray-400);
}

.pagination ul li:has(svg):hover {
  background: #fde2e8;
}

.pagination ul li:has(svg):hover svg {
  stroke: var(--primary-500);
}

/* tooltip */
.tooltip_main:has(.tooltip) {
  position: relative;
}

.tooltip {
  display: inline-flex;
  height: 30px;
  min-width: 80px;
  align-items: center;
  background: var(--primary-500);
  justify-content: center;
  border-radius: 5px;
  font-size: 15px;
  font-weight: 500;
  color: var(--white);
  text-transform: capitalize;
  position: absolute;
  transition: 0.2s ease;
  bottom: calc(100% + 10px);
  opacity: 0;
}

.tooltip_main:where(:hover, :focus) .tooltip {
  opacity: 1;
}

.tooltip.primary {
  background: var(--primary-color);
}

.tooltip.secondary {
  background: var(--secondary-color);
}

.tooltip.success {
  background: var(--success-color);
}

.tooltip.info {
  background: var(--info-color);
}

.tooltip.warning {
  background: var(--warning-color);
}

.tooltip.danger {
  background: var(--danger-color);
}

.tooltip.dark {
  background: var(--dark-color);
}

.tooltip.light {
  background: var(--light-color);
}


.tooltip:before {
  content: '';
  position: absolute;
  clip-path: polygon(0% 0%, 100.1% 0%, 52.7% 100.3%);
  height: 6px;
  width: 15px;
  background: inherit;
  top: 100%;
}

/* table */
table {
  border-spacing: 0;
}

thead {
  background: var(--gray-50);
}

table :where(th, td) {
  padding: 15px 20px;
  text-align: left;
  font-size: 15px;
  color: #a1a1a1;
  white-space: nowrap;
}

:where(th, td):has(.checkbox) {
  padding: 0 0 0 10px;
  width: 35px;
  min-width: 0;
}

table :where(th, td) a {
  color: var(--black);
  text-decoration: underline;
}

table :where(thead) :where(td, th) {
  border-bottom: 1px solid #0001;
  font-weight: 600;
  color: #000;
}

table :where(thead, tbody)>tr:not(:last-child) :where(td, th) {
  border-bottom: 1px solid #0001;
}

table.bordered {
  border-top: 1px solid #0001;
  border-left: 1px solid #0001;
}

table.bordered :where(th, td) {
  padding: 12px 20px;
}

table.bordered :where(thead, tbody)>tr :where(td, th) {
  border-bottom: 1px solid #0001;
  border-right: 1px solid #0001;
}

table.striped :where(tbody)>tr:nth-child(odd) :where(td, th) {
  background: #fafafa;
}

.comment {
  white-space: wrap;
  display: -webkit-box;
  -webkit-line-clamp: 2;
  overflow: hidden;
  text-overflow: ellipsis;
  -webkit-box-orient: vertical;
  word-break: break-word;
  max-width: 300px;
  min-width: 200px;
}

/* form input */
.input_field {
  background: var(--gray-100);
  display: inline-flex;
  align-items: center;
  grid-gap: 10px;
  height: 45px;
  width: 100%;
  padding: 0 15px;
  transition: 0.2s ease;
  border-radius: 5px;
  overflow: hidden;
  border: 2px solid transparent;
}

.input_field:has(input:hover, textarea:hover) {
  border-color: var(--gray-200);
  background: var(--white);
}

.input_field:has(input:focus, textarea:focus) {
  border-color: var(--primary-500) !important;
  background: var(--white) !important;
}

.input_field :where(input, textarea) {
  flex: 1 1;
  min-width: 0px;
  font-size: 15px;
  height: 100%;
  width: 100%;
}

textarea {
  padding: 10px 0;
}

.input_field:has(textarea) {
  min-height: 150px;
}

input[type="number"]::-webkit-outer-spin-button,
input[type="number"]::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

input[type="number"] {
  -moz-appearance: textfield;
}

.input_field svg {
  height: 20px;
  width: 20px;
}

/* page heading */
.page_heading {
  position: relative;
  text-transform: capitalize;
  font-weight: 700;
  padding-bottom: 30px;
  font-size: clamp(20px, 2vw, 22px);
}

/* select option */
.select {
  position: relative;
  display: inline-block;
  min-width: 150px;
}

.select-trigger {
  position: relative;
  background-color: var(--gray-100);
  cursor: pointer;
  padding: 10px 15px;
  border-radius: 5px;
  border: 2px solid transparent;
  font-size: 15px;
  height: 100%;
  -webkit-user-select: none;
  user-select: none;
  text-transform: capitalize;
  display: flex;
  align-items: center;
  justify-content: space-between;
  grid-gap: 10px;
  color: var(--gray-500);
  transition: 0.2s ease;
}

.select.sm .select-trigger {
  padding: 5px 10px;
  font-size: 14px;
  border-radius: 4px;
}

.select.white .select-trigger {
  background: var(--white);
  box-shadow: 0 0 0 1.5px var(--gray-200);
}

.select-trigger:where(.open, :hover) {
  background: var(--white);
  border-color: var(--gray-200);
}

.select-trigger:where(.open) {
  border-color: var(--primary-500);
}

.select-trigger.open svg {
  rotate: -180deg;
}

.options {
  position: absolute;
  padding: 10px;
  top: calc(100%);
  display: flex;
  pointer-events: none;
  left: 0;
  transition: 0.2s ease;
  flex-direction: column;
  grid-gap: 5px;
  right: 0;
  max-height: 200px;
  overflow-y: auto;
  z-index: 10;
  background: var(--white);
  border-radius: 6px;
  border: 2px solid var(--gray-100);
  opacity: 0;
}

.options.open {
  opacity: 1;
  top: calc(100% + 5px);
  pointer-events: auto;
}

.top_options .options {
  top: unset;
  bottom: 100%;
}

.top_options .options.open {
  bottom: calc(100% + 10px);
}

.option {
  font-size: 15px;
  padding: 5px 10px;
  text-transform: capitalize;
  border-radius: 5px;
  color: var(--gray-400);
  transition: 0.2s ease;
  cursor: pointer;
}

.option:where(.selected, :hover) {
  background-color: var(--primary-50);
  color: var(--primary-500);
}

/* Breadcrumb Container */
.breadcrumb {
  display: flex;
  grid-gap: 5px;
  align-items: center;
}

.breadcrumb_item {
  display: flex;
  align-items: center;
  font-size: 15px;
  grid-gap: 5px;
  text-transform: capitalize;
  font-weight: 500;
  color: var(--gray-600);
}

.breadcrumb_item svg {
  height: 18px;
  width: 18px;
  stroke: var(--gray-300);
}

.breadcrumb_item.active {
  font-weight: bold;
  color: var(--primary-500);
}

.breadcrumb_item a {
  text-decoration: none;
  display: flex;
  align-items: center;
}

.breadcrumb_item a svg {
  height: 20px;
  width: 20px;
  stroke: var(--gray-600);
}

.breadcrumb_item a:hover {
  text-decoration: underline;
}

/* product profile */
.product_profile {
  display: flex;
  align-items: center;
  grid-gap: 12px;
  text-decoration: none;
}

.product_profile figure {
  height: 50px;
  width: 50px;
  flex: 0 0 50px;
  background: var(--white);
  border-radius: 5px;
  box-shadow: 0 0 5px var(--gray-200);
}

.product_profile figure img {
  height: 100%;
  width: 100%;
  object-fit: contain;
}

.product_profile_content {
  display: flex;
  flex-direction: column;
}

.product_profile span {
  font-weight: 500;
  color: var(--gray-900);
  font-size: 16px;
  text-transform: capitalize;
}

.product_profile_content p {
  font-size: 15px;
  font-weight: 400;
}

.product_profile_content p b {
  font-weight: 500;
  color: var(--primary-500);
}

/* rating */
.rating {
  display: flex;
  align-items: center;
  grid-gap: 2px;
}

.rating svg {
  height: 18px;
  width: 18px;
}

.rating svg.active {
  stroke: orange;

}

.rating svg path:nth-child(2) {
  fill: var(--gray-200);
}

.rating svg.active path:nth-child(2) {
  fill: orange;
}

/* text editor */
.quill {
  border-radius: 5px;
  overflow: hidden;
}

.ql-toolbar.ql-snow {
  border: none !important;
  padding: 10px !important;
  min-height: 45px;
  display: flex;
  align-items: center;
  background: var(--gray-100);
}


.ql-container.ql-snow {
  border: 1px solid var(--gray-100) !important;
  border-top: none !important;
  border-radius: 0 0 5px 5px;
}

.ql-editor {
  min-height: 200px;
}

.ql-toolbar button {
  background: var(--white) !important;
  border-radius: 3px;
  padding: 4px !important;
  display: flex !important;
  align-items: center;
  transition: 0.2s ease;
  justify-content: center;
  box-shadow: 0 0 5px var(--gray-100);
}

.ql-toolbar .ql-formats {
  display: inline-flex !important;
  grid-gap: 10px !important;
  margin: 0 !important;
  flex-wrap: wrap;
}

.ql-editor.ql-blank::before {
  font-style: inherit !important;
  color: var(--gray-400) !important;
  font-size: 14px;
}

.ql-editor p {
  font-size: 15px !important;
}

/* thumbnail */
#thumbnail {
  display: none;
}

.thumbnail {
  display: flex;
  flex-direction: column;
  align-items: center;
  grid-gap: 10px;
}

.thumbnail label {
  width: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
}

.thumbnail figure {
  height: 160px;
  min-width: 160px;
  width: 100%;
  background: var(--gray-100);
  border-radius: 10px;
  margin: auto;
}

.thumbnail figure img {
  object-fit: contain;
}

.thumbnail figure svg {
  height: 90%;
  width: 90%;
  stroke: var(--gray-200);
  stroke-width: 1.5px;
}

.thumbnail_edit {
  position: absolute;
  height: 25px !important;
  width: 25px !important;
  background: var(--primary-500);
  border-radius: 50%;
  padding: 5px;
  stroke-width: 2px !important;
  stroke: var(--white) !important;
  top: -10px;
  right: -10px;
}

.thumbnail small {
  text-align: center;
}

/* checkbox */
.checkbox {
  display: flex;
  position: relative;
  grid-gap: 10px;
  user-select: none;
  cursor: pointer;
  align-items: center;
  transition: 0.2s ease;
}

.checkbox input[type="checkbox"] {
  display: none;
}

.checkbox:before {
  content: '';
  height: 20px;
  flex: 0 0 20px;
  transition: 0.2s ease;
  width: 20px;
  background: var(--gray-100);
  background-size: 17px;
  background-position: center center;
  background-repeat: no-repeat;
  border-radius: 5px;
  border: 2px solid var(--gray-200);
}

.checkbox span {
  font-size: 14px;
  font-weight: 500;
  color: var(--gray-500);
}

.checkbox:has(input:checked):before {
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' class='icon icon-tabler icon-tabler-check' width='24' height='24' viewBox='0 0 24 24' stroke-width='2.5' stroke='white' fill='none' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpath stroke='none' d='M0 0h24v24H0z' fill='none'/%3E%3Cpath d='M5 12l5 5l10 -10' /%3E%3C/svg%3E");
  background-color: var(--primary-500);
  border-color: var(--primary-300);
}

/* multi slection option */
.multi_select {
  padding: 10px;
  height: 100%;
  min-height: 45px;
  position: relative;
  flex-wrap: wrap;
  overflow: visible;
  width: auto;
  max-width: 400px;
}

.select_dropdown {
  display: flex;
  flex-direction: column;
  position: absolute;
  top: 100%;
  width: 100%;
  left: 0;
  max-height: 200px;
  overflow-y: auto;
  z-index: 10;
  background: var(--white);
  border-radius: 6px;
  border: 2px solid var(--gray-100);
  opacity: 0;
  pointer-events: none;
  transition: 0.2s ease;
}

.top_options .select_dropdown {
  bottom: calc(100% + 10px);
  top: unset !important;
}

.select_dropdown li {
  padding: 10px 15px;
  border-bottom: 1px solid var(--gray-100);
  font-size: clamp(15px, 2vw, 16px);
  text-transform: capitalize;
  cursor: pointer;
  transition: 0.2s ease;
}

.select_dropdown li:hover {
  background: var(--gray-50);
}

.select_dropdown li.disabled {
  cursor: not-allowed;
  pointer-events: auto;
  background: var(--gray-50);
}

.selected_tags {
  display: flex;
  grid-gap: 5px;
  flex-wrap: wrap;
}

.selected_tags:not(:has(.selected_tag:nth-child(1))) {
  display: none;
}

.selected_tag {
  grid-gap: 3px;
  display: flex;
  align-items: center;
  background: var(--primary-500);
  padding: 6px 10px;
  border-radius: 5px;
  color: var(--white);
  font-size: 14px;
  font-weight: 500;
  text-transform: capitalize;
  line-height: 1;
  box-shadow: 0 0 5px var(--gray-200);
}

.selected_tag.single {
  background: transparent;
  box-shadow: none;
  border-radius: 0;
  padding: 0;
  color: var(--black);
}

.selected_tag svg {
  height: 18px;
  width: 18px;
  flex: 0 0 18px;
}

.multi_select input {
  min-width: 100px;
}

.multi_select:has(input:focus, input.active) .select_dropdown {
  opacity: 1;
  pointer-events: auto;
  top: calc(100% + 10px);
}

.remove_tags {
  display: flex;
  align-items: center;
  background: var(--primary-500);
  stroke: var(--white);
  padding: 2px;
  border-radius: 3px;
  stroke-width: 2.5;
  cursor: pointer;
}

.multi_select .chevron_down {
  margin-left: auto;
}

/* user */
.user {
  display: flex;
  align-items: center;
  grid-gap: 10px;
  text-decoration: none;
}

.user figure {
  height: 30px;
  width: 30px;
  flex: 0 0 30px;
  border-radius: 50px;
}

.user .name {
  font-size: 15px;
  font-weight: 500;
  text-transform: capitalize;
}

/* calender */
.react-datepicker-wrapper {
  width: 100%;
  height: 100%;
  display: flex !important;
  align-items: center;
}

.react-datepicker-wrapper input {
  height: 45px;
}

.react-datepicker__header {
  background: transparent !important;
  border: none !important;
}

.react-datepicker {
  border: none !important;
  border-radius: 10px !important;
  box-shadow: 0 0 10px var(--gray-200) !important;
}

.react-datepicker__month {
  margin: 15px !important;
}

.react-datepicker__day--today,
.react-datepicker__month-text--today,
.react-datepicker__quarter-text--today,
.react-datepicker__year-text--today {
  background: var(--primary-100) !important;
  color: var(--primary-500) !important;
}

.react-datepicker__day-name,
.react-datepicker__day,
.react-datepicker__time-name {
  border-radius: 5px;
  height: 30px !important;
  width: 30px !important;
  display: inline-flex !important;
  align-items: center !important;
  font-weight: 500 !important;
  justify-content: center !important;
  transition: 0.2s ease !important;
  color: var(--gray-400) !important;
}

.react-datepicker__day:hover,
.react-datepicker__month-text:hover,
.react-datepicker__quarter-text:hover,
.react-datepicker__year-text:hover,
.react-datepicker__day--today {
  background: var(--primary-100) !important;
  color: var(--primary-500) !important;
}

.react-datepicker__day--selected,
.react-datepicker__day--in-selecting-range,
.react-datepicker__day--in-range,
.react-datepicker__month-text--selected,
.react-datepicker__month-text--in-selecting-range,
.react-datepicker__month-text--in-range,
.react-datepicker__quarter-text--selected,
.react-datepicker__quarter-text--in-selecting-range,
.react-datepicker__quarter-text--in-range,
.react-datepicker__year-text--selected,
.react-datepicker__year-text--in-selecting-range,
.react-datepicker__year-text--in-range {
  background: var(--primary-500) !important;
  color: var(--white) !important;
}

.react-datepicker-popper[data-placement^=top] .react-datepicker__triangle::before,
.react-datepicker-popper[data-placement^=bottom] .react-datepicker__triangle::before,
.react-datepicker-popper[data-placement^=top] .react-datepicker__triangle::after,
.react-datepicker-popper[data-placement^=bottom] .react-datepicker__triangle::after {
  content: none !important;
}

.react-datepicker__day--outside-month {
  color: var(--gray-200) !important;
}

.react-datepicker__day-name {
  color: var(--primary-500) !important;
}

.react-datepicker__navigation--previous {
  left: 10px !important;
}

.react-datepicker__navigation--next {
  right: 10px !important;
}

.react-datepicker__year-read-view--down-arrow,
.react-datepicker__month-read-view--down-arrow,
.react-datepicker__month-year-read-view--down-arrow,
.react-datepicker__navigation-icon::before {
  border-color: var(--primary-500) !important;
}


.react-datepicker__navigation-icon--next::before {
  top: 50% !important;
  left: 50% !important;
  transform: translate(-50%, -50%) rotate(45deg) !important;
}

.react-datepicker__navigation-icon--previous::before {
  top: 50% !important;
  left: 50% !important;
  transform: translate(-50%, -50%) rotate(225deg) !important;
}

.react-datepicker__navigation {
  background: var(--primary-100) !important;
  border-radius: 5px !important;
  top: 10px !important;
  display: flex !important;
  align-items: center !important;
  justify-content: center !important;
}

.react-datepicker__header {
  padding: 20px 0 15px 0 !important;
  border-bottom: 1px solid var(--gray-100) !important;
}

.react-datepicker__year-read-view--down-arrow,
.react-datepicker__month-read-view--down-arrow,
.react-datepicker__month-year-read-view--down-arrow,
.react-datepicker__navigation-icon::before {
  height: 6px !important;
  width: 6px !important;
  border-width: 2px 2px 0 0 !important;
}

.react-datepicker__day--keyboard-selected,
.react-datepicker__month-text--keyboard-selected,
.react-datepicker__quarter-text--keyboard-selected,
.react-datepicker__year-text--keyboard-selected {
  background: var(--primary-100) !important;
  color: var(--primary-500) !important;
}

/*notes*/
.notes {
  display: flex;
  flex-direction: column;
  grid-gap: 5px;
}

.note_list {
  display: flex;
  flex-direction: column;
  grid-gap: 8px;

}

.note {
  display: flex;
  flex-direction: column;
  grid-gap: 10px;
  padding: 10px;
  background: var(--gray-100);
  border-radius: 6px;
}

.note p {
  font-size: clamp(14px, 2vw, 15px);
  color: var(--gray-500);
  border-bottom: 1px solid var(--gray-200);
  padding-bottom: 10px;
}

.note_footer {
  display: flex;
  align-items: center;
  grid-gap: 10px;
  justify-content: space-between;
}

.note_date {
  font-size: 13px;
  color: var(--gray-500);
  font-weight: 500;
}

.note_footer svg {
  stroke: var(--primary-500);
  height: 20px;
  width: 20px;
  cursor: pointer;
  stroke-width: 1.5px;
}

/* modal */
.modal {
  position: fixed;
  display: flex;
  align-items: center;
  justify-content: center;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  z-index: 9999;
  visibility: hidden;
  pointer-events: none;
  opacity: 0; 
  transition: opacity 0.3s ease, visibility 0.3s ease; 
}

.modal-content {
    min-height: 300px;
    height: auto;
    max-width: 600px;
    display: flex;
    flex-direction: column;
    width: 100%;
    background: var(--white);
    border-radius: 10px;
    box-shadow: 0 0 10px var(--gray-400);
    position: relative;
}

.modal-content::after {
  content: "";
  position: fixed;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  background: #0005;
  pointer-events: none;
  z-index: -1;
  opacity: 0;
  transition: opacity 0.3s ease;
}

.modal.active {
  visibility: visible;
  pointer-events: auto;
  opacity: 1;
}

.modal.active .modal-content::after {
  opacity: 1;
}
.modal-content div[class^="modal-"] {
    padding: 20px;
    border-bottom: 1px solid var(--gray-200);
}
.modal-body{
  flex: 1;
  display: flex;
  flex-direction: column;
  grid-gap: 15px;
}
.modal-footer{
  display: flex;
  justify-content: flex-end;
  grid-gap: 10px;
  border: none !important;
}